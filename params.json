{"tagline":"An extensible, customizable, front-end download builder tool","google":"","body":"## Hello\r\n\r\nThis is a front-end lib to give you core DownloadBuilder functionalities.\r\n\r\n## What does it do?\r\n- Handle check/uncheck of dependencies/dependents;\r\n- Handle toggleAll logic;\r\n\r\n## Demo\r\n\r\nCheckout our [demo](http://downloadbuilder.github.com/download-builder/demo/).\r\n\r\nCheckout the [javascript application](https://github.com/DownloadBuilder/download-builder/blob/master/demo/app.js) of the demo above.\r\n\r\n## How to use it?\r\n\r\n```javascript\r\nvar downloadBuilder = new DownloadBuilder( element );\r\n```\r\n\r\nDownloadBuilder will look inside of `element` and define:\r\n- Components = `input[data-dependencies][name][type=checkbox]`;\r\n- Toggle All = `input[type=checkbox].toggle-all`;\r\n- Toggle All per group = `input[class^=\\\"toggle-all-\\\"][type=checkbox]`\r\n\r\nIf you want different toggle all class names, use the options below.\r\n\r\n```javascript\r\nvar downloadBuilder = new DownloadBuilder( element, {\r\n  toggleAll: \".select-all\",\r\n  toggleAllCategory: \"[class^=\\\"select-all-\\\"]\"\r\n});\r\n```\r\n\r\nIf you don't want to pass dependencies using the html attribute `data-dependencies`, pass the whole structure in options. (To be implemented yet)\r\n\r\n```javascript\r\nvar downloadBuilder = new DownloadBuilder( element, {\r\n  categories: [{\r\n    name: \"core\",\r\n    components: [{\r\n      name: \"core\",\r\n      dependencies: []\r\n    },{\r\n      name: \"widgets\",\r\n      dependencies: []\r\n    },{\r\n      name: \"mouse\",\r\n      dependencies: [ \"core\", \"widget\" ]\r\n    },{\r\n      name: \"position\",\r\n      dependencies: []\r\n    }]\r\n  },{\r\n    name: \"widgets\",\r\n    components: [{\r\n      name: \"accordion\",\r\n      dependencies: [ \"core\", \"widgets\" ]\r\n    },{\r\n      name: \"autocomplete\",\r\n      dependencies: [ \"core\", \"widget\", \"menu\", \"position\" ]\r\n    }, ... ]\r\n  }, ... ]\r\n});\r\n```\r\n\r\nChecking or unchecking a component will trigger the `check` event. Clicking any toggle all will also trigger this event with all its corresponding components.\r\n\r\n```javascript\r\ndownloadBuilder.on( \"check\", function( event, components, value, affectedDependents ) {\r\n  if ( !check && userRegret( components, affectedDependents ) ) {\r\n    // User did not confirm uncheck action via dialog.\r\n    // Eg: uncheck all Interactions of http://jqueryui.com/download/ by clicking its toggle all.\r\n    return false;\r\n  }\r\n});\r\n```\r\n\r\nFor each checked or unchecked component, the `change` event will be triggered.\r\n\r\n```javascript\r\ndownloadBuilder.on( \"change\", function( event, component, value ) {\r\n  updateModel( component, value );\r\n});\r\n```\r\n\r\nAfter all the components (singular if user clicks on one component, but plural for toggle alls) the `accumulated-change` event will be triggered.\r\n\r\n```javascript\r\ndownloadBuilder.on( \"accumulated-change\", function( event, components, value ) {\r\n  updateModel( components, value );\r\n});\r\n```\r\n\r\nFollow a suggestion to render your html.\r\n\r\n```html\r\n{{#each categories}}\r\n\t<div class=\"ui-widget ui-widget-content component-group clearfix\">\r\n\t\t<div class=\"component-group-desc\">\r\n\t\t\t<h3>{{name}}</h3>\r\n\t\t\t<p>{{description}}</p>\r\n\t\t</div>\r\n\t\t<div class=\"component-group-list\">\r\n\t\t{{#each components}}\r\n\t\t\t<div class=\"clearfix\">\r\n\t\t\t\t<input id=\"{{name}}\" type=\"checkbox\" checked name=\"{{name}}\" class=\"ui-widget-content\" data-dependencies=\"{{dependencies}}\">\r\n\t\t\t\t<label for=\"{{name}}\" title=\"{{description}}\" class=\"clearfix\">\r\n\t\t\t\t\t<span class=\"component-title\">{{title}}</span>\r\n\t\t\t\t\t<span class=\"component-desc\">{{description}}</span>\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t{{/each}}\r\n\t\t</div>\r\n\t</div>\r\n{{/each}}\r\n```\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Download-builder"}